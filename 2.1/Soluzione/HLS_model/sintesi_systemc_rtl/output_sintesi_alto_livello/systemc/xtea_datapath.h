// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _xtea_datapath_HH_
#define _xtea_datapath_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct xtea_datapath : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<6> > counter_i;
    sc_out< sc_lv<6> > counter_o;
    sc_out< sc_logic > counter_o_ap_vld;
    sc_in< sc_lv<64> > sum_i;
    sc_out< sc_lv<64> > sum_o;
    sc_out< sc_logic > sum_o_ap_vld;
    sc_in< sc_lv<32> > temp_i;
    sc_out< sc_lv<32> > temp_o;
    sc_out< sc_logic > temp_o_ap_vld;
    sc_in< sc_lv<32> > acc_i;
    sc_out< sc_lv<32> > acc_o;
    sc_out< sc_logic > acc_o_ap_vld;
    sc_out< sc_lv<1> > dpValues_address0;
    sc_out< sc_logic > dpValues_ce0;
    sc_out< sc_logic > dpValues_we0;
    sc_out< sc_lv<32> > dpValues_d0;
    sc_in< sc_lv<32> > dpValues_q0;
    sc_out< sc_lv<1> > dpValues_address1;
    sc_out< sc_logic > dpValues_ce1;
    sc_out< sc_logic > dpValues_we1;
    sc_out< sc_lv<32> > dpValues_d1;
    sc_out< sc_lv<2> > keys_address0;
    sc_out< sc_logic > keys_ce0;
    sc_in< sc_lv<32> > keys_q0;
    sc_out< sc_lv<1> > values_address0;
    sc_out< sc_logic > values_ce0;
    sc_in< sc_lv<32> > values_q0;
    sc_out< sc_lv<1> > values_address1;
    sc_out< sc_logic > values_ce1;
    sc_in< sc_lv<32> > values_q1;
    sc_in< sc_lv<32> > fsmState;
    sc_in< sc_lv<2> > command;


    // Module declarations
    xtea_datapath(sc_module_name name);
    SC_HAS_PROCESS(xtea_datapath);

    ~xtea_datapath();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > tmp_read_fu_144_p2;
    sc_signal< sc_lv<32> > tmp_reg_548;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_9_gep_fu_234_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_8_gep_fu_243_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_6_gep_fu_266_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_5_gep_fu_275_p3;
    sc_signal< sc_lv<64> > tmp_3_fu_410_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_419_p1;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_14_gep_fu_319_p3;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_12_gep_fu_328_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_10_gep_fu_337_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_7_gep_fu_346_p3;
    sc_signal< sc_lv<1> > xtea_dpValues_Val_V_s_gep_fu_355_p3;
    sc_signal< sc_lv<6> > grp_fu_386_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_536_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_542_p2;
    sc_signal< sc_lv<64> > v_V_21_fu_424_p2;
    sc_signal< sc_lv<64> > v_V_15_fu_480_p2;
    sc_signal< sc_lv<32> > v_V_17_fu_473_p2;
    sc_signal< sc_lv<32> > v_V_13_fu_529_p2;
    sc_signal< sc_lv<32> > grp_fu_379_p2;
    sc_signal< sc_lv<32> > grp_fu_393_p2;
    sc_signal< sc_lv<2> > p_Result_1_fu_400_p4;
    sc_signal< sc_lv<2> > tmp_10_fu_415_p1;
    sc_signal< sc_lv<27> > r_V_9_fu_437_p4;
    sc_signal< sc_lv<32> > r_V_10_fu_431_p2;
    sc_signal< sc_lv<32> > r_V_11_fu_447_p1;
    sc_signal< sc_lv<32> > r_V_4_fu_451_p2;
    sc_signal< sc_lv<32> > tmp_14_fu_463_p1;
    sc_signal< sc_lv<32> > tmp_4_fu_457_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_467_p2;
    sc_signal< sc_lv<27> > r_V_7_fu_493_p4;
    sc_signal< sc_lv<32> > r_V_6_fu_487_p2;
    sc_signal< sc_lv<32> > r_V_8_fu_503_p1;
    sc_signal< sc_lv<32> > r_V_fu_507_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_519_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_513_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_523_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_condition_171;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_C6EF3720;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<64> ap_const_lv64_FFFFFFFF61C88647;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<64> ap_const_lv64_9E3779B9;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_o();
    void thread_acc_o_ap_vld();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_condition_171();
    void thread_counter_o();
    void thread_counter_o_ap_vld();
    void thread_dpValues_address0();
    void thread_dpValues_address1();
    void thread_dpValues_ce0();
    void thread_dpValues_ce1();
    void thread_dpValues_d0();
    void thread_dpValues_d1();
    void thread_dpValues_we0();
    void thread_dpValues_we1();
    void thread_grp_fu_379_p2();
    void thread_grp_fu_386_p2();
    void thread_grp_fu_393_p2();
    void thread_keys_address0();
    void thread_keys_ce0();
    void thread_p_Result_1_fu_400_p4();
    void thread_r_V_10_fu_431_p2();
    void thread_r_V_11_fu_447_p1();
    void thread_r_V_4_fu_451_p2();
    void thread_r_V_6_fu_487_p2();
    void thread_r_V_7_fu_493_p4();
    void thread_r_V_8_fu_503_p1();
    void thread_r_V_9_fu_437_p4();
    void thread_r_V_fu_507_p2();
    void thread_sum_o();
    void thread_sum_o_ap_vld();
    void thread_temp_o();
    void thread_temp_o_ap_vld();
    void thread_tmp_10_fu_415_p1();
    void thread_tmp_12_fu_519_p1();
    void thread_tmp_14_fu_463_p1();
    void thread_tmp_2_fu_523_p2();
    void thread_tmp_3_fu_410_p1();
    void thread_tmp_4_fu_457_p2();
    void thread_tmp_6_fu_467_p2();
    void thread_tmp_7_fu_542_p2();
    void thread_tmp_8_fu_536_p2();
    void thread_tmp_9_fu_419_p1();
    void thread_tmp_read_fu_144_p2();
    void thread_tmp_s_fu_513_p2();
    void thread_v_V_13_fu_529_p2();
    void thread_v_V_15_fu_480_p2();
    void thread_v_V_17_fu_473_p2();
    void thread_v_V_21_fu_424_p2();
    void thread_values_address0();
    void thread_values_address1();
    void thread_values_ce0();
    void thread_values_ce1();
    void thread_xtea_dpValues_Val_V_10_gep_fu_337_p3();
    void thread_xtea_dpValues_Val_V_12_gep_fu_328_p3();
    void thread_xtea_dpValues_Val_V_14_gep_fu_319_p3();
    void thread_xtea_dpValues_Val_V_5_gep_fu_275_p3();
    void thread_xtea_dpValues_Val_V_6_gep_fu_266_p3();
    void thread_xtea_dpValues_Val_V_7_gep_fu_346_p3();
    void thread_xtea_dpValues_Val_V_8_gep_fu_243_p3();
    void thread_xtea_dpValues_Val_V_9_gep_fu_234_p3();
    void thread_xtea_dpValues_Val_V_s_gep_fu_355_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
