// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xtea_fsm (
        ap_clk,
        ap_rst,
        counter,
        dpValues_address0,
        dpValues_ce0,
        dpValues_q0,
        dpValues_address1,
        dpValues_ce1,
        dpValues_q1,
        keys_address0,
        keys_ce0,
        keys_we0,
        keys_d0,
        keys_address1,
        keys_ce1,
        keys_we1,
        keys_d1,
        values_address0,
        values_ce0,
        values_we0,
        values_d0,
        values_q0,
        values_address1,
        values_ce1,
        values_we1,
        values_d1,
        values_q1,
        memCommand,
        memCommand_ap_vld,
        fsmState_i,
        fsmState_o,
        fsmState_o_ap_vld,
        reset,
        op1,
        op2,
        command,
        inputReady,
        result1,
        result1_ap_vld,
        result2,
        result2_ap_vld,
        outputReady,
        outputReady_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;



input   ap_clk;
input   ap_rst;
input  [5:0] counter;
output  [0:0] dpValues_address0;
output   dpValues_ce0;
input  [31:0] dpValues_q0;
output  [0:0] dpValues_address1;
output   dpValues_ce1;
input  [31:0] dpValues_q1;
output  [1:0] keys_address0;
output   keys_ce0;
output   keys_we0;
output  [31:0] keys_d0;
output  [1:0] keys_address1;
output   keys_ce1;
output   keys_we1;
output  [31:0] keys_d1;
output  [0:0] values_address0;
output   values_ce0;
output   values_we0;
output  [31:0] values_d0;
input  [31:0] values_q0;
output  [0:0] values_address1;
output   values_ce1;
output   values_we1;
output  [31:0] values_d1;
input  [31:0] values_q1;
output  [1:0] memCommand;
output   memCommand_ap_vld;
input  [31:0] fsmState_i;
output  [31:0] fsmState_o;
output   fsmState_o_ap_vld;
input   reset;
input  [31:0] op1;
input  [31:0] op2;
input  [1:0] command;
input   inputReady;
output  [31:0] result1;
output   result1_ap_vld;
output  [31:0] result2;
output   result2_ap_vld;
output   outputReady;
output   outputReady_ap_vld;

reg[0:0] dpValues_address0;
reg dpValues_ce0;
reg[0:0] dpValues_address1;
reg dpValues_ce1;
reg[1:0] keys_address0;
reg keys_ce0;
reg keys_we0;
reg[1:0] keys_address1;
reg keys_ce1;
reg keys_we1;
reg[0:0] values_address0;
reg values_ce0;
reg values_we0;
reg[0:0] values_address1;
reg values_ce1;
reg values_we1;
reg memCommand_ap_vld;
reg[31:0] fsmState_o;
reg fsmState_o_ap_vld;
reg result1_ap_vld;
reg result2_ap_vld;
reg outputReady;
reg outputReady_ap_vld;

wire   [0:0] tmp_read_fu_140_p2;
reg   [0:0] tmp_reg_419;
wire   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] tmp_1_read_fu_146_p2;
reg   [31:0] tmp_1_reg_423;
wire   [0:0] grp_fu_393_p3;
reg   [0:0] tmp_5_reg_427;
reg   [0:0] tmp_4_reg_441;
wire   [0:0] xtea_dpValues_Val_V_s_gep_fu_263_p3;
wire   [0:0] xtea_dpValues_Val_V_1_gep_fu_272_p3;
wire   [0:0] tmp_3_fu_401_p2;
reg   [0:0] tmp_3_reg_455;
wire   [0:0] tmp_6_fu_407_p2;
reg   [0:0] tmp_6_reg_459;
wire   [0:0] xtea_values_Val_V_ad_2_gep_fu_308_p3;
wire   [0:0] xtea_values_Val_V_ad_3_gep_fu_317_p3;
wire   [0:0] xtea_values_Val_V_ad_gep_fu_326_p3;
wire   [0:0] tmp_2_read_fu_191_p2;
wire   [0:0] xtea_values_Val_V_ad_1_gep_fu_336_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_7_fu_413_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_condition_284;
reg    ap_condition_289;
reg    ap_condition_294;

always @ (posedge ap_clk) begin
    if (((tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_reg_423 <= fsmState_i;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_3_reg_455 <= tmp_3_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_read_fu_146_p2 == 32'd3) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_4_reg_441 <= counter[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_read_fu_146_p2 == 32'd4) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_5_reg_427 <= counter[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_401_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_6_reg_459 <= tmp_6_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_reg_419 <= reset;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_284)) begin
        if ((tmp_1_read_fu_146_p2 == 32'd3)) begin
            dpValues_address0 = xtea_dpValues_Val_V_s_gep_fu_263_p3;
        end else if ((tmp_1_read_fu_146_p2 == 32'd4)) begin
            dpValues_address0 = 64'd0;
        end else begin
            dpValues_address0 = 'bx;
        end
    end else begin
        dpValues_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_284)) begin
        if ((tmp_1_read_fu_146_p2 == 32'd3)) begin
            dpValues_address1 = xtea_dpValues_Val_V_1_gep_fu_272_p3;
        end else if ((tmp_1_read_fu_146_p2 == 32'd4)) begin
            dpValues_address1 = 64'd1;
        end else begin
            dpValues_address1 = 'bx;
        end
    end else begin
        dpValues_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_fu_393_p3 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd3) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_fu_393_p3 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd4) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        dpValues_ce0 = 1'b1;
    end else begin
        dpValues_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_fu_393_p3 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd3) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_fu_393_p3 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd4) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        dpValues_ce1 = 1'b1;
    end else begin
        dpValues_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_read_fu_140_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        fsmState_o = 32'd0;
    end else if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd1;
    end else if (((grp_fu_393_p3 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd3) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd5;
    end else if (((grp_fu_393_p3 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd4) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd10;
    end else if (((tmp_1_read_fu_146_p2 == 32'd5) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd6;
    end else if (((tmp_1_read_fu_146_p2 == 32'd6) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd7;
    end else if (((tmp_1_read_fu_146_p2 == 32'd7) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd8;
    end else if (((tmp_1_read_fu_146_p2 == 32'd8) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd9;
    end else if ((((tmp_1_read_fu_146_p2 == 32'd9) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_7_fu_413_p2 == 1'd1) & (tmp_3_fu_401_p2 == 1'd0) & (tmp_6_fu_407_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        fsmState_o = 32'd3;
    end else if (((tmp_1_read_fu_146_p2 == 32'd10) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd11;
    end else if (((tmp_1_read_fu_146_p2 == 32'd11) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd12;
    end else if (((tmp_1_read_fu_146_p2 == 32'd12) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd13;
    end else if (((tmp_1_read_fu_146_p2 == 32'd13) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        fsmState_o = 32'd14;
    end else if ((((tmp_1_read_fu_146_p2 == 32'd14) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_3_fu_401_p2 == 1'd0) & (tmp_7_fu_413_p2 == 1'd0) & (tmp_6_fu_407_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        fsmState_o = 32'd4;
    end else begin
        fsmState_o = fsmState_i;
    end
end

always @ (*) begin
    if ((((grp_fu_393_p3 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd3) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_fu_393_p3 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd4) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd5) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd6) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd7) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd8) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd9) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd10) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd11) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd12) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd13) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_read_fu_146_p2 == 32'd14) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_7_fu_413_p2 == 1'd1) & (tmp_3_fu_401_p2 == 1'd0) & (tmp_6_fu_407_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_3_fu_401_p2 == 1'd0) & (tmp_7_fu_413_p2 == 1'd0) & (tmp_6_fu_407_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_read_fu_140_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        fsmState_o_ap_vld = 1'b1;
    end else begin
        fsmState_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_289)) begin
        if ((tmp_3_reg_455 == 1'd1)) begin
            keys_address0 = 64'd0;
        end else if (((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0))) begin
            keys_address0 = 64'd2;
        end else begin
            keys_address0 = 'bx;
        end
    end else begin
        keys_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_289)) begin
        if ((tmp_3_reg_455 == 1'd1)) begin
            keys_address1 = 64'd1;
        end else if (((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0))) begin
            keys_address1 = 64'd3;
        end else begin
            keys_address1 = 'bx;
        end
    end else begin
        keys_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        keys_ce0 = 1'b1;
    end else begin
        keys_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        keys_ce1 = 1'b1;
    end else begin
        keys_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        keys_we0 = 1'b1;
    end else begin
        keys_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        keys_we1 = 1'b1;
    end else begin
        keys_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        memCommand_ap_vld = 1'b1;
    end else begin
        memCommand_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        outputReady = 1'd1;
    end else if (((tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        outputReady = 1'd0;
    end else begin
        outputReady = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_reg_455 == 1'd1) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_reg_459 == 1'd1) & (tmp_3_reg_455 == 1'd0) & (tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        outputReady_ap_vld = 1'b1;
    end else begin
        outputReady_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        result1_ap_vld = 1'b1;
    end else begin
        result1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_4_reg_441 == 1'd1) & (tmp_1_reg_423 == 32'd3) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_5_reg_427 == 1'd1) & (tmp_1_reg_423 == 32'd4) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        result2_ap_vld = 1'b1;
    end else begin
        result2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0))) begin
            values_address0 = xtea_values_Val_V_ad_gep_fu_326_p3;
        end else if (((tmp_3_fu_401_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd1))) begin
            values_address0 = xtea_values_Val_V_ad_2_gep_fu_308_p3;
        end else if ((1'b1 == ap_condition_294)) begin
            values_address0 = 64'd0;
        end else begin
            values_address0 = 'bx;
        end
    end else begin
        values_address0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0))) begin
            values_address1 = xtea_values_Val_V_ad_1_gep_fu_336_p3;
        end else if (((tmp_3_fu_401_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd1))) begin
            values_address1 = xtea_values_Val_V_ad_3_gep_fu_317_p3;
        end else if ((1'b1 == ap_condition_294)) begin
            values_address1 = 64'd1;
        end else begin
            values_address1 = 'bx;
        end
    end else begin
        values_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_3_fu_401_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_fu_407_p2 == 1'd1) & (tmp_3_fu_401_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        values_ce0 = 1'b1;
    end else begin
        values_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_3_fu_401_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_fu_407_p2 == 1'd1) & (tmp_3_fu_401_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        values_ce1 = 1'b1;
    end else begin
        values_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        values_we0 = 1'b1;
    end else begin
        values_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_read_fu_191_p2 == 1'd1) & (tmp_1_read_fu_146_p2 == 32'd0) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        values_we1 = 1'b1;
    end else begin
        values_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm = ap_ST_fsm_state1;

assign ap_CS_fsm_state1 = ap_ST_fsm_state1[32'd0];

assign ap_CS_fsm_state2 = ap_ST_fsm_state1[32'd1];

always @ (*) begin
    ap_condition_284 = ((grp_fu_393_p3 == 1'd1) & (tmp_read_fu_140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1));
end

always @ (*) begin
    ap_condition_289 = ((tmp_1_reg_423 == 32'd1) & (tmp_reg_419 == 1'd0) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_condition_294 = ((tmp_6_fu_407_p2 == 1'd1) & (tmp_3_fu_401_p2 == 1'd0) & (tmp_1_read_fu_146_p2 == 32'd1));
end

assign grp_fu_393_p3 = counter[32'd5];

assign keys_d0 = values_q0;

assign keys_d1 = values_q1;

assign memCommand = command;

assign result1 = dpValues_q0;

assign result2 = dpValues_q1;

assign tmp_1_read_fu_146_p2 = fsmState_i;

assign tmp_2_read_fu_191_p2 = inputReady;

assign tmp_3_fu_401_p2 = ((command == 2'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_407_p2 = ((command == 2'd1) ? 1'b1 : 1'b0);

assign tmp_7_fu_413_p2 = ((command == 2'd2) ? 1'b1 : 1'b0);

assign tmp_read_fu_140_p2 = reset;

assign values_d0 = op1;

assign values_d1 = op2;

assign xtea_dpValues_Val_V_1_gep_fu_272_p3 = 64'd1;

assign xtea_dpValues_Val_V_s_gep_fu_263_p3 = 64'd0;

assign xtea_values_Val_V_ad_1_gep_fu_336_p3 = 64'd1;

assign xtea_values_Val_V_ad_2_gep_fu_308_p3 = 64'd0;

assign xtea_values_Val_V_ad_3_gep_fu_317_p3 = 64'd1;

assign xtea_values_Val_V_ad_gep_fu_326_p3 = 64'd0;

endmodule //xtea_fsm
